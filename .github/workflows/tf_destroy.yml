name: Terraform destroy infrastructure

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Type "yes" to confirm destroying infrastructure'
        required: true
        default: 'no' # Default to 'no' to prevent accidental destruction

jobs:
    terraform-destroy:
        runs-on: ubuntu-latest
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        defaults:
          run:
            working-directory: ./terraform      
        
        steps:

        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Set up Terraform
          uses: hashicorp/setup-terraform@v3
          with:
            terraform_version: 1.5.7

        - name: Login to Azure
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
        
        - name: Terraform Init
          run: terraform init 

        - name: Terraform Destroy
          if: ${{ github.event.inputs.action == 'yes' }}
          run: terraform destroy --auto-approve

        - name: Send notification to MS Teams
          if: always() # runs regardless of success/failure
          env:
            WEBHOOK: ${{ secrets.TEAMS_WEBHOOK_URL }}
            WORKFLOW: ${{ github.workflow }}
            REPO: ${{ github.repository }}
            BRANCH: ${{ github.ref_name }}
            STATUS: ${{ job.status }}
            RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          run: |
            payload=$(cat <<'EOF'
            {
              "@type": "MessageCard",
              "@context": "http://schema.org/extensions",
              "summary": "GitHub Actions: $WORKFLOW",
              "themeColor": "0076D7",
              "title": "GitHub Actions: $WORKFLOW",
              "sections": [
                {
                  "activityTitle": "Repository: $REPO",
                  "facts": [
                    {"name": "Branch", "value": "$BRANCH"},
                    {"name": "Status", "value": "$STATUS"},
                    {"name": "Run ID", "value": "$RUN_URL"}
                  ],
                  "markdown": true
                }
              ]
            }
            EOF
            )
            curl -s -H "Content-Type: application/json" -d "$payload" "$WEBHOOK"

    